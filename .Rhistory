select(Pos, Sequence, BestELp, BestBAscore, Type)
HTB9.restricted %>%
select(BestELp,BestBAscore) %>%
cor()
HTB9.restricted %>% count(Type)
BAroc = roc(HTB9.restricted$Type ~ HTB9.restricted$BestBAscore, plot = TRUE, print.auc = TRUE)
ELproc = roc(HTB9.restricted$Type ~ HTB9.restricted$BestELp, plot = TRUE, print.auc = TRUE)
rocELp.df = tibble(threshold = ELproc$thresholds,
sensitivity = ELproc$sensitivities,
specificity = ELproc$specificities)
rocELp.df %>%
mutate(TPR = sensitivity, FPR = 1 - specificity) %>%
mutate(projx = (TPR+FPR)/2,
projy = (TPR+FPR)/2,
dist = sqrt( (projx - FPR)^2 + (projy - TPR)^2 ) ) %>%
arrange(desc(dist)) %>%
select(threshold,sensitivity,specificity,TPR,FPR,dist) %>%
head(40)
HTB9.restricted %>%
select(Pos, Sequence, BestELp, BestBAscore, Type)
table(HTB9.restricted$Type)
# logistic reg on type
model_type = glm(Type ~ BestELp*BestBAscore + I(BestELp^2) + I(BestBAscore^2), data = HTB9.restricted, family = "binomial")
summary(model_type)
# responses of log regression
probs = predict(model_type, newdata = HTB9.restricted, type = "response")
summary(probs)
logroc = roc(HTB9.restricted$Type ~ probs, plot = TRUE, print.auc = TRUE)
# logistic reg on type
model_type = glm(Type ~ BestELp*BestBAscore, data = HTB9.restricted, family = "binomial")
summary(model_type)
# responses of log regression
probs = predict(model_type, newdata = HTB9.restricted, type = "response")
summary(probs)
logroc = roc(HTB9.restricted$Type ~ probs, plot = TRUE, print.auc = TRUE)
logroc.df = tibble(threshold = logroc$thresholds,
sensitivity = logroc$sensitivities,
specificity = logroc$specificities)
logroc.df %>%
mutate(TPR = sensitivity, FPR = 1 - specificity) %>%
mutate(projx = (TPR+FPR)/2,
projy = (TPR+FPR)/2,
dist = sqrt( (projx - FPR)^2 + (projy - TPR)^2 ) ) %>%
arrange(desc(dist)) %>%
select(threshold,sensitivity,specificity,TPR,FPR,dist) %>%
head(40)
library(DMwR)
install.packages("DMwR")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(MASS)
library(rhdf5)
## Data directory
wd_data = "/Users/josephsalzer/research/exostat/raw_spectrum_files"
spectra_name = "solar_spectrum_2021-01-01.h5"
# assign spectrum name
spectra_name = "solar_spectrum_2021-01-01.h5"
# download solar spectrum, with flux, flux_norm, lambda, var, and var_norm
# (pixels,order_idx)
solar_spectrum = H5Fopen(str_c(wd_data, spectra_name))
## Data directory
wd_data = "/Users/josephsalzer/research/exostat/raw_spectrum_files"
## Data directory
wd_data = "/Users/josephsalzer/research/exostat/raw_spectrum_files/"
# assign spectrum name
spectra_name = "solar_spectrum_2021-01-01.h5"
# download solar spectrum, with flux, flux_norm, lambda, var, and var_norm
# (pixels,order_idx)
solar_spectrum = H5Fopen(str_c(wd_data, spectra_name))
solar_spectrum
solar_spectrum$flux_norm[1:6,1:10]
# number of pixels and orders
num_pixels = dim(solar_spectrum$flux)[1]
num_orders = dim(solar_spectrum$flux)[2]
# number of pixels and orders
num_pixels = dim(solar_spectrum$flux)[1]
num_orders = dim(solar_spectrum$flux)[2]
# vector of orders and pixels
#orders = seq(1,num_orders) %>% map_chr( \(x) str_c("order",x) )
orders = seq(1,num_orders)
pixels = seq(1,num_pixels)
# create dataframe for orders and pixels
solar_spectrum.df = expand_grid(order = orders, pixel = pixels)
# set columns
solar_spectrum.df$flux_norm = as.vector(solar_spectrum$flux_norm)
solar_spectrum.df$flux = as.vector(solar_spectrum$flux)
solar_spectrum.df$lambda = as.vector(solar_spectrum$lambda)
solar_spectrum.df$var = as.vector(solar_spectrum$var)
solar_spectrum.df$var_norm = as.vector(solar_spectrum$var_norm)
# remove some vectors
rm(orders, pixels, num_orders, num_pixels)
line_name = "line_5446.55497_62.h5"
#line_name = "line_4966.30631_50.h5"
# download a single line
# (pixels,date)
single_line = H5Fopen(str_c(wd_data, line_name))
single_line
# vector of dates
dates = as.Date(single_line$dates)
# vector of pixels
pixels = as.numeric( str_split_1(single_line$pixels,":") )
pixels = seq(pixels[1],pixels[2])
# create dataframe for dates and pixels
single_line.df = expand_grid(date = dates, pixel = pixels )
# set columns
single_line.df$flux = as.vector( single_line$flux)
single_line.df$flux_norm = as.vector( single_line$flux_norm)
single_line.df$lambda = as.vector( single_line$lambda)
single_line.df$var = as.vector( single_line$var)
single_line.df$var_norm = as.vector( single_line$var_norm)
rm(dates)
single_line$order_phys
single_line$order_idx
single_line$lambdac_vald
single_line$lambdac_fit
summary( solar_spectrum.df )
# central lambda, pixels and order id, deltav?
single_line$lambdac
# central lambda, pixels and order id, deltav?
single_line$lambdac_fit
single_line$lambdac_vald
single_line$pixels
single_line$order_idx
single_line$order_phys
single_line$deltav
summary(single_line.df)
solar_spectrum.df %>%
filter(order == single_line$order_idx) %>%
ggplot(mapping = aes(x = lambda, y = flux)) +
geom_point()
solar_spectrum.df %>%
filter(order == single_line$order_idx) %>%
ggplot(mapping = aes(x = lambda, y = flux)) +
geom_point() +
ggtitle(str_c("order",single_line$order_idx))
solar_spectrum.df %>%
filter(order == single_line$order_idx) %>%
ggplot(mapping = aes(x = lambda, y = flux)) +
geom_point() +
ggtitle(str_c("order ",single_line$order_idx))
solar_spectrum.df %>%
filter(order == single_line$order_idx) %>%
#ggplot(mapping = aes(x = lambda, y = flux)) +
ggplot(mapping = aes(x = pixel, y = flux)) +
geom_point() +
ggtitle(str_c("order ",single_line$order_idx))
# lower and upper pixel
pixel_lower = as.numeric( str_split_1(single_line$pixels,":")[1] )
pixel_upper = as.numeric( str_split_1(single_line$pixels,":")[2] )
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm))
solar_spectrum.df %>%
filter(order == single_line$order_idx,
pixel >= pixel_lower - 50,
pixel <= pixel_upper + 50) %>%
ggplot(mapping = aes(x = lambda, y = flux_norm)) +
geom_vline(xintercept = (single_line.df %>% filter(date == "2021-01-01", pixel == pixel_lower))$lambda) +
geom_vline(xintercept = (single_line.df %>% filter(date == "2021-01-01", pixel == pixel_upper))$lambda) +
geom_point()
solar_spectrum.df %>%
filter(order == single_line$order_idx,
pixel >= pixel_lower,
pixel <= pixel_upper) %>%
ggplot(mapping = aes(x = lambda, y = flux_norm)) +
geom_vline(xintercept = (single_line.df %>% filter(date == "2021-01-01", pixel == pixel_lower))$lambda) +
geom_vline(xintercept = (single_line.df %>% filter(date == "2021-01-01", pixel == pixel_upper))$lambda) +
geom_point()
solar_spectrum.df %>%
filter(order == single_line$order_idx,
pixel >= pixel_lower - 50,
pixel <= pixel_upper + 50) %>%
ggplot(mapping = aes(x = lambda, y = flux_norm)) +
geom_vline(xintercept = (single_line.df %>% filter(date == "2021-01-01", pixel == pixel_lower))$lambda) +
geom_vline(xintercept = (single_line.df %>% filter(date == "2021-01-01", pixel == pixel_upper))$lambda) +
geom_point()
rm(pixel_lower, pixel_upper)
single_line.df%>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2021-01-03"))) %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm,color=date))
single_line.df
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2021-01-31"))) %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm,color=date))
summary(single_line.df$date)
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2022-03-22"))) %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm,color=date))
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2021-08-02"))) %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm,color=date))
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2021-08-02"))) %>%
ggplot() +
geom_line(mapping = aes(x=lambda,y=flux_norm,color=date))
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2021-08-01"))) %>%
ggplot() +
geom_line(mapping = aes(x=lambda,y=flux_norm,color=date))
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2021-08-10"))) %>%
ggplot() +
geom_line(mapping = aes(x=lambda,y=flux_norm,color=date))
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2023-07-04"))) %>%
ggplot() +
geom_line(mapping = aes(x=lambda,y=flux_norm,color=date))
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2021-01-03"))) %>%
ggplot() +
geom_line(mapping = aes(x=lambda,y=flux_norm,color=date))
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2021-01-03"))) %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm,color=date))
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2021-01-03"))) %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm,color=date))
single_line.df %>%
filter(date %in% c(as.Date("2021-01-01"),as.Date("2022-04-13"))) %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm,color=date))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(MASS)
library(rhdf5)
## Data directory
wd_data = "/Users/josephsalzer/research/exostat/raw_spectrum_files/"
# assign spectrum name
spectra_name = "solar_spectrum_2021-01-01.h5"
# download solar spectrum, with flux, flux_norm, lambda, var, and var_norm
# (pixels,order_idx)
solar_spectrum = H5Fopen(str_c(wd_data, spectra_name))
solar_spectrum
solar_spectrum$flux_norm[1:6,1:10]
# number of pixels and orders
num_pixels = dim(solar_spectrum$flux)[1]
num_orders = dim(solar_spectrum$flux)[2]
# vector of orders and pixels
#orders = seq(1,num_orders) %>% map_chr( \(x) str_c("order",x) )
orders = seq(1,num_orders)
pixels = seq(1,num_pixels)
# create dataframe for orders and pixels
solar_spectrum.df = expand_grid(order = orders, pixel = pixels)
# set columns
solar_spectrum.df$flux_norm = as.vector(solar_spectrum$flux_norm)
solar_spectrum.df$flux = as.vector(solar_spectrum$flux)
solar_spectrum.df$lambda = as.vector(solar_spectrum$lambda)
solar_spectrum.df$var = as.vector(solar_spectrum$var)
solar_spectrum.df$var_norm = as.vector(solar_spectrum$var_norm)
# remove some vectors
rm(orders, pixels, num_orders, num_pixels)
line_name = "line_5446.55497_62.h5"
#line_name = "line_4966.30631_50.h5"
# download a single line
# (pixels,date)
single_line = H5Fopen(str_c(wd_data, line_name))
single_line
# vector of dates
dates = as.Date(single_line$dates)
# vector of pixels
pixels = as.numeric( str_split_1(single_line$pixels,":") )
pixels = seq(pixels[1],pixels[2])
# create dataframe for dates and pixels
single_line.df = expand_grid(date = dates, pixel = pixels )
# set columns
single_line.df$flux = as.vector( single_line$flux)
single_line.df$flux_norm = as.vector( single_line$flux_norm)
single_line.df$lambda = as.vector( single_line$lambda)
single_line.df$var = as.vector( single_line$var)
single_line.df$var_norm = as.vector( single_line$var_norm)
rm(dates)
summary( solar_spectrum.df )
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm)) +
geom_vline(xintercept = single_line$lambdac_fit) +
geom_vline(xintercept = single_line$lambdac_vald)
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm)) +
geom_vline(xintercept = single_line$lambdac_fit, color = "blue") +
geom_vline(xintercept = single_line$lambdac_vald, color = "red")
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm)) +
geom_vline(xintercept = single_line$lambdac_fit, color = "orange") +
geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df%>%
filter(pixel <= 1811)
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
single_line.df%>%
filter(pixel <= 1811) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
single_line.df%>%
#filter(pixel <= 1811) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm))
#geom_vline(xintercept = single_line$lambdac_fit, color = "orange") +
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm))
geom_vline(xintercept = 1848, color = "orange") +
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm))
geom_vline(xintercept = 1848, color = "orange")
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm))
geom_vline(xintercept = 1850, color = "orange")
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm)) +
geom_vline(xintercept = 1850, color = "orange")
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm)) +
geom_vline(xintercept = 1840, color = "orange") +
geom_vline(xintercept = 1853, color = "orange")
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm)) +
geom_vline(xintercept = 1840, color = "orange") +
geom_vline(xintercept = 1854, color = "orange")
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df %>%
filter(date == "2021-01-01") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm)) +
geom_vline(xintercept = 1840, color = "orange") +
geom_vline(xintercept = 1855, color = "orange")
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df %>%
filter(date == "2021-01-03") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm)) +
geom_vline(xintercept = 1840, color = "orange") +
geom_vline(xintercept = 1855, color = "orange")
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
single_line.df%>%
filter(pixel <= 1855) %>%
filter(pixel >= 1840) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
single_line.df%>%
filter(pixel <= 1855) %>%
filter(pixel >= 1840) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point() +
geom_smooth()
single_line.df%>%
filter(pixel <= 1855) %>%
filter(pixel >= 1840) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
#geom_point() +
geom_smooth()
single_line.df%>%
filter(pixel <= 1855) %>%
filter(pixel >= 1840) %>%
mutate(date = as.Date(date)) %>%
ggplot() +
#geom_point() +
geom_smooth(mapping = aes(x = date, y = flux_norm, color = pixel))
single_line.df%>%
filter(pixel <= 1855) %>%
filter(pixel >= 1840) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point() +
#geom_smooth()
single_line.df%>%
filter(pixel <= 1855) %>%
filter(pixel >= 1840) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
#geom_smooth()
single_line.df%>%
filter(pixel <= 1855) %>%
filter(pixel >= 1840) %>%
filter()
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
1840+(1855-1840)/2
single_line.df%>%
#filter(pixel <= 1855) %>%
#filter(pixel >= 1840) %>%
filter(pixel == 1847) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
#geom_smooth()
single_line.df%>%
#filter(pixel <= 1855) %>%
#filter(pixel >= 1840) %>%
filter(pixel == 1847) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
#geom_point()
geom_smooth()
single_line.df%>%
#filter(pixel <= 1855) %>%
#filter(pixel >= 1840) %>%
filter(pixel == 1847) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
#geom_smooth()
single_line.df%>%
#filter(pixel <= 1855) %>%
#filter(pixel >= 1840) %>%
filter(pixel == 1847, pixel == 1848) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
single_line.df%>%
#filter(pixel <= 1855) %>%
#filter(pixel >= 1840) %>%
filter(pixel == 1847 | pixel == 1848) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
single_line.df%>%
filter(pixel <= 1855) %>%
filter(pixel >= 1840) %>%
#filter(pixel == 1847 | pixel == 1848) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
single_line.df%>%
#filter(pixel <= 1855) %>%
#filter(pixel >= 1840) %>%
filter(pixel == 1855 | pixel == 1854) %>%
mutate(date = as.Date(date)) %>%
ggplot(mapping = aes(x = date, y = flux_norm, color = pixel)) +
geom_point()
single_line.df %>%
filter(date == "2022-03-22") %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm)) +
geom_vline(xintercept = single_line$lambdac_fit, color = "orange") +
geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
line_name = "line_4390.47537_34.h5"
#line_name = "line_4966.30631_50.h5"
# download a single line
# (pixels,date)
single_line = H5Fopen(str_c(wd_data, line_name))
single_line
# vector of dates
dates = as.Date(single_line$dates)
# vector of pixels
pixels = as.numeric( str_split_1(single_line$pixels,":") )
pixels = seq(pixels[1],pixels[2])
# create dataframe for dates and pixels
single_line.df = expand_grid(date = dates, pixel = pixels )
# set columns
single_line.df$flux = as.vector( single_line$flux)
single_line.df$flux_norm = as.vector( single_line$flux_norm)
single_line.df$lambda = as.vector( single_line$lambda)
single_line.df$var = as.vector( single_line$var)
single_line.df$var_norm = as.vector( single_line$var_norm)
rm(dates)
# lower and upper pixel
pixel_lower = as.numeric( str_split_1(single_line$pixels,":")[1] )
pixel_upper = as.numeric( str_split_1(single_line$pixels,":")[2] )
single_line.df %>%
filter(date == "2022-03-22") %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm)) +
geom_vline(xintercept = single_line$lambdac_fit, color = "orange") +
geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
