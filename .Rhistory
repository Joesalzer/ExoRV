# create dataframe for orders and pixels
solar_spectrum.df = expand_grid(order = orders, pixel = pixels)
# set columns
solar_spectrum.df$flux_norm = as.vector(solar_spectrum$flux_norm)
solar_spectrum.df$flux = as.vector(solar_spectrum$flux)
solar_spectrum.df$lambda = as.vector(solar_spectrum$lambda)
solar_spectrum.df$var = as.vector(solar_spectrum$var)
solar_spectrum.df$var_norm = as.vector(solar_spectrum$var_norm)
solar_spectrum.df$date = as.Date( str_split_1(spectra_name,"_")[3] )
return(solar_spectrum.df)
}
load.solarfile("solar_spectrum_2021-01-01.h5")
drop_na(load.solarfile("solar_spectrum_2021-01-01.h5"))
## load a "line_LINE_ORDER.h5: file into a dataframe ##
load.linefile = function(line_name) {
# download a single line
# (pixels,date)
single_line = H5Fopen(str_c(wd_data, line_name))
# vector of dates
dates = as.Date(single_line$dates)
# vector of pixels
pixels = as.numeric( str_split_1(single_line$pixels,":") )
pixels = seq(pixels[1],pixels[2])
# create dataframe for dates and pixels
single_line.df = expand_grid(date = dates, pixel = pixels )
# set columns
single_line.df$flux = as.vector( single_line$flux)
single_line.df$flux_norm = as.vector( single_line$flux_norm)
single_line.df$lambda = as.vector( single_line$lambda)
single_line.df$var = as.vector( single_line$var)
single_line.df$var_norm = as.vector( single_line$var_norm)
single_line.df$lambdac_fit = single_line$lambdac_fit
single_line.df$lambdac_vald = single_line$lambdac_vald
#single_line.df$pixels = single_line$pixels
single_line.df$order_idx = single_line$order_idx
single_line.df$prder_phys = single_line$order_phys
single_line.df$deltav = single_line$deltav
return(single_line.df)
}
load.linefile("line_3895.58333_17.h5")
# list of files in raw_spectrum_files
file_list = list.files("raw_spectrum_files")
# list of solar spectrum files
solarspectrum_list = file_list[!is.na( str_extract(file_list,"solar_spectrum") )]
# get dates for solar spectrum
all_dates = str_sub( str_split_fixed(solarspectrum_list,"_",n=3)[,3], end = -4 )
# list of line files
line_list = file_list[!is.na( str_extract(file_list,"line") )]
# get line-orders
all_lineorders = str_sub( str_split_fixed(line_list,"_",n=2)[,2], end = -4 )
# example solar spectrum
solar_spectrum.df = load.solarfile( solarspectrum_list[1] )
single_line.df = load.linefile( line_list[40] )
summary( solar_spectrum.df )
summary(single_line.df)
solarspectrum_list[1]
line_list[40]
length(solarspectrum_list)
length(line_list)
# example solar spectrum
solar_spectrum.df = load.solarfile( solarspectrum_list[100] )
single_line.df = load.linefile( line_list[40] )
summary( solar_spectrum.df )
summary(single_line.df)
solar_spectrum.df %>%
filter(order == single_line.df$order_idx[1])
solar_spectrum.df %>%
filter(order == single_line.df$order_idx[1]) %>%
#ggplot(mapping = aes(x = lambda, y = flux)) +
ggplot(mapping = aes(x = pixel, y = flux)) +
geom_point() +
ggtitle(str_c("order ",single_line.df$order_idx[1]))
# lower and upper pixel
pixel_lower = min(single_line.df$pixel)
pixel_upper = max(single_line.df$pixel)
single_line.df %>%
filter(date == "2022-03-22") %>%
ggplot() +
geom_point(mapping = aes(x=lambda,y=flux_norm)) +
geom_vline(xintercept = single_line.df$lambdac_fit[1], color = "orange") +
geom_vline(xintercept = single_line.df$lambdac_vald[1], color = "purple")
single_line.df %>%
filter(date == "2021-01-03") %>%
ggplot() +
geom_point(mapping = aes(x=pixel,y=flux_norm)) +
geom_vline(xintercept = pixel_lower + 50, color = "orange") +
geom_vline(xintercept = pixel_upper - 50, color = "orange")
#geom_vline(xintercept = single_line$lambdac_vald, color = "purple")
summary(single_line.df$lambdac_fit)
summary(single_line.df$lambdac_vald)
single_line.df$lambdac_vald[1]
single_line.df$lambdac_vald[2]
single_line.df$lambdac_vald[50]
single_line.df$lambdac_fit[1]
single_line.df$lambdac_fit[2]
single_line.df$lambdac_fit[20]
single_line.df
solar_spectrum.df %>%
filter(order == single_line.df$order_idx[1],
pixel >= pixel_lower - 50,
pixel <= pixel_upper + 50) %>%
ggplot(mapping = aes(x = lambda, y = flux_norm)) +
geom_vline(xintercept = (single_line.df %>% filter(date == "2021-01-01", pixel == pixel_lower))$lambda) +
geom_vline(xintercept = (single_line.df %>% filter(date == "2021-01-01", pixel == pixel_upper))$lambda) +
geom_point()
single_line.df
single_line.df %>%
filter(date == "2021-01-01" | "2021-01-02")
single_line.df %>%
filter(date == "2021-01-01" | date =="2021-01-02")
single_line.df %>%
filter(date == "2021-01-01" | date =="2021-08-01")
single_line.df %>%
filter(date == "2021-01-01" | date =="2021-08-02")
single_line.df %>%
filter(date == "2021-01-01" | date =="2021-08-02") %>%
ggplot() +
geom_point( mapping = aes(x=pixel,y=flux_norm, color = date) )
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
## Data directory
wd_data = "/Users/josephsalzer/research/exostat/"
# get species info for each line
species.df = read_csv(str_c(wd_data,"neid_solar/","clean_line_info.csv")) %>%
dplyr::select(lambda, species, excitation_energy) %>%
mutate(lambda = factor( round(lambda,3) ),
species = factor(species)) %>%
unique()
# convert categorical vars to factors
model.df = tibble( read.csv(str_c(wd_data,"neid_solar/", "final_fits_6kmps.csv") ) ) %>%
rename( wavelength = lambda ) %>%
mutate( obs_date = as.Date(obs_date),
lambda = factor(wavelength),
order_idx = factor(order_idx),
lam_order = factor( lam_order )
)
# join final fits and species
model.df = model.df %>%
left_join(species.df, by = "lambda")
rm(species.df)
head(model.df)
# list of lambdas in model.df
final_lams = ( model.df %>% group_by(lambda) %>% summarize(n. = n()) )$lambda
length(final_lams)
# list of lambda-orders in model.df
final_lams_orders = ( model.df %>% group_by(lam_order) %>% summarize(n. = n()) )$lam_order
length(final_lams_orders)
# list of lambda-orders in model.df
final_days = ( model.df %>% group_by(obs_date) %>% summarize(n. = n()) )$obs_date
length(final_days)
# check how many line-order pairs there are
model.df %>%
group_by(lambda, order_idx) %>%
count()
summary(model.df)
model.df
model.df %>%
filter(wavelength<8600) %>%
ggplot() +
geom_point(mapping = aes(x = depth1_center, y = width1_center, color = wavelength),alpha = .2)
model.df %>%
ggplot() +
geom_point(mapping = aes(x = depth1, y = width1, color = wavelength))
model.df %>%
filter(wavelength<8600) %>%
ggplot() +
geom_point(mapping = aes(x = depth1, y = width1, color = wavelength))
model.df %>%
#filter(wavelength < 8600) %>%
filter(wavelength > 8600) %>%
ggplot() +
geom_point(mapping = aes(x = depth1_center, y = width1_center, color = wavelength), alpha = .2)
model.df %>%
group_by(lam_order) %>%
mutate(scale_hg1 = (gh_1 - mean(gh_1))/sd(gh_1) ) %>%
ungroup() %>%
ggplot(mapping = aes(x=scale_hg1, y=scale_rv)) +
geom_point()
model.df %>%
ggplot(mapping = aes(x=hg1_center, y=rv_center)) +
geom_point()
model.df %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center)) +
geom_point()
model.df %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = rv_center))
#geom_errorbar(aes(x = date, ymin = mean_rv - 1.96*sd_rv, ymax = mean_rv + 1.96*sd_rv), color = "black")
model.df %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_center), sd_rv_center = sd(rv_center) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center))
#geom_errorbar(aes(x = date, ymin = mean_rv - 1.96*sd_rv, ymax = mean_rv + 1.96*sd_rv), color = "black")
model.df %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_center), sd_rv_center = sd(rv_center) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center)) +
geom_errorbar(aes(x = date, ymin = mean_rv_center - 1.96*sd_rv_center, ymax = mean_rv_center + 1.96*sd_rv_center), color = "black")
model.df %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_center), sd_rv_center = sd(rv_center) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center))
model.df %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_center), sd_rv_center = sd(rv_center) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center)) +
geom_errorbar(aes(x = date, ymin = mean_rv_center - 1.96*sd_rv_center, ymax = mean_rv_center + 1.96*sd_rv_center), color = "black")
## Violin plots
model.df %>%
filter(as.Date(obs_date) <= as.Date("2021-02-01")) %>%
mutate(obs_date = as.factor(obs_date)) %>%
ggplot() +
geom_violin(mapping = aes(x = obs_date, y = rv)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
# amplitude
amp = 2
# frequency
freq = 1/30
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
model.df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert_center = rv_center + pert_val)
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
model.df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert_center = rv_center + pert_val) %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_pert_center), sd_rv_center = sd(rv_pert_center) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center))
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
model.df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert_center = rv_center + pert_val) %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_pert_center), sd_rv_center = sd(rv_pert_center) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center)) +
geom_errorbar(aes(x = date, ymin = mean_rv_center - 1.96*sd_rv_center, ymax = mean_rv_center + 1.96*sd_rv_center), color = "black")
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
model.df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert_center = rv_center + pert_val) %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_pert_center), sd_rv_center = sd(rv_pert_center) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center))
rm(amp, freq)
model.df %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center)) +
geom_point()
model.df %>%
filter(wavelength<8600) %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center)) +
geom_point()
model.df %>%
filter(wavelength<8600) %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center, color = wavelength)) +
geom_point()
model.df %>%
filter(wavelength<8600) %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center, color = wavelength), alpha=.2) +
geom_point()
model.df %>%
filter(wavelength<8600) %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center, color = wavelength)) +
geom_point(alpha=.2)
hg1.lm = lm(rv_center ~ hg_1_center, model.df %>% filter(wavelength<8600) )
summary(hg1.lm)
hg1.lm = lm(rv_center ~ hg_1_center*lam_order, model.df %>% filter(wavelength<8600) )
summary(hg1.lm)
hg1.lm = lm(rv ~ hg_1_center*lam_order, model.df %>% filter(wavelength<8600) )
summary(hg1.lm)
model.df %>%
filter(wavelength<8600) %>%
ggplot(mapping = aes(x=hg_1, y=rv, color = wavelength)) +
geom_point(alpha=.2)
model.df %>%
#filter(wavelength<8600) %>%
ggplot(mapping = aes(x=hg_1, y=rv, color = wavelength)) +
geom_point(alpha=.2)
model.df %>%
#filter(wavelength<8600) %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center, color = wavelength)) +
geom_point(alpha=.2)
model.df %>%
filter(wavelength<8600) %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center, color = wavelength)) +
geom_point(alpha=.2)
model.df %>% filter(hg_1_center > .004)
model.df %>% filter(hg_1_center > .004) %>% count()
model.df %>% filter(hg_1_center > .004)
model.df %>% filter(wavelength<8600) %>% filter(hg_1_center > .004)
i = 301
hg1.lm = lm(rv_center ~ hg_1_center, model.df %>% filter(lam_order == final_lams_orders[i] ) )
model.df %>%
filter(lam_order == final_lams_orders[i] ) %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center)) +
geom_point() +
ggtitle( final_lams_orders[i], subtitle = paste0("slope == ",hg1.lm$coefficients[2], ", adj.r.squared == ", summary(hg1.lm)$adj.r.squared) ) +
geom_smooth(method = "lm", se=F)
i = 150
hg1.lm = lm(rv_center ~ hg_1_center, model.df %>% filter(lam_order == final_lams_orders[i] ) )
model.df %>%
filter(lam_order == final_lams_orders[i] ) %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center)) +
geom_point() +
ggtitle( final_lams_orders[i], subtitle = paste0("slope == ",hg1.lm$coefficients[2], ", adj.r.squared == ", summary(hg1.lm)$adj.r.squared) ) +
geom_smooth(method = "lm", se=F)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(lme4)
library(MASS)
library(gridExtra)
library(car)
library(emmeans)
library(glmnet)
## Data directory
wd_data = "/Users/josephsalzer/research/exostat/"
# get species info for each line
species.df = read_csv(str_c(wd_data,"neid_solar/","clean_line_info.csv")) %>%
dplyr::select(lambda, species, excitation_energy) %>%
mutate(lambda = factor( round(lambda,3) ),
species = factor(species)) %>%
unique()
# convert categorical vars to factors
model.df = tibble( read.csv(str_c(wd_data,"neid_solar/", "final_fits_6kmps.csv") ) ) %>%
rename( wavelength = lambda ) %>%
mutate( obs_date = factor(obs_date),
lambda = factor(wavelength),
order_idx = factor(order_idx),
lam_order = factor( lam_order )
)
# join final fits and species
model.df = model.df %>%
left_join(species.df, by = "lambda")
rm(species.df)
head(model.df)
# list of lambdas in model.df
final_lams = ( model.df %>% group_by(lambda) %>% summarize(n. = n()) )$lambda
length(final_lams)
# list of lambda-orders in model.df
final_lams_orders = ( model.df %>% group_by(lam_order) %>% summarize(n. = n()) )$lam_order
length(final_lams_orders)
# list of lambda-orders in model.df
final_days = ( model.df %>% group_by(obs_date) %>% summarize(n. = n()) )$obs_date
length(final_days)
# check how many line-order pairs there are
model.df %>%
group_by(lambda, order_idx) %>%
count()
# amplitude
amp = 2
# frequency
freq = 1/30
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
pert.df = model.df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert_center = rv_center + pert_val,
rv_pert_scale = rv_scale + pert_val)
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
pert.df = model.df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert_center = rv_center + pert_val)
pert.df
# graph of perturbation
pert.df %>%
dplyr::select(date_num, pert_val) %>%
unique() %>%
ggplot() +
geom_function(fun = function(x) amp*sin(freq*x), color = "red" ) +
geom_point(mapping = aes(x = date_num, y = pert_val))
lm.pert = lm(rv_pert_center ~ obs_date + b1_center + a1_center + depth1_center + width1_center + hg_0_center + hg_2_center + hg_3_center + hg_4_center + hg_5_center + hg_7_center + hg_9_center, pert.df)
# dataframe of coefficients
coef.df.pert = tibble( coef = rownames(summary(lm.pert)$coefficients),
estimate = summary(lm.pert)$coefficients[,1],
se = summary(lm.pert)$coefficients[,2],
pval = summary(lm.pert)$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(lm.pert, "obs_date", nuisance = "lam_order") )
date.emmeans = emmean.summary$emmean
date.se = emmean.summary$SE
# get perturbed values by date
date.perts = pert.df$pert_val %>% unique()
# join the perturbed dataframe with the coefficients to compare our perturbed obsdate with
date.pert.table = full_join(
pert.df %>%
dplyr::select(obs_date, pert_val) %>%
unique() %>%
mutate(obs_date = as.Date(obs_date)),
coef.df.pert %>%
filter( startsWith( coef, "obs_date") ) %>%
mutate(obs_date = as.Date(str_sub(coef, 9))),
by = "obs_date"
)
date.pert.table$emmean = date.emmeans
date.pert.table$emmeanSE = date.se
date.pert.table %>%
ggplot() +
geom_point(aes(x = obs_date, y = emmean), color = "black") +
geom_errorbar(aes(x = obs_date, ymin = emmean - 1.96*emmeanSE, ymax = emmean + 1.96*emmeanSE), color = "black") +
geom_point(aes(x = obs_date, y = pert_val), color = "red") +
geom_function(fun = function(x) amp*sin(freq*as.numeric(x)), color = "red" ) +
xlab("obs date")
model.df %>%
filter(wavelength<8600) %>%
ggplot(mapping = aes(x=hg_1_center, y=rv_center, color = wavelength)) +
geom_point(alpha=.2) +
xlim(-.005,.005)
model.df %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_center), sd_rv_center = sd(rv_center)/309 ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center)) +
geom_errorbar(aes(x = date, ymin = mean_rv_center - 1.96*sd_rv_center, ymax = mean_rv_center + 1.96*sd_rv_center), color = "black")
model.df %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_center), sd_rv_center = sd(rv_center)/sqrt(309) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center)) +
geom_errorbar(aes(x = date, ymin = mean_rv_center - 1.96*sd_rv_center, ymax = mean_rv_center + 1.96*sd_rv_center), color = "black")
# amplitude
amp = 2
# frequency
freq = 1/30
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
model.df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert_center = rv_center + pert_val) %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_pert_center), sd_rv_center = sd(rv_pert_center) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center))
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
model.df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert_center = rv_center + pert_val) %>%
group_by(obs_date) %>%
summarize( mean_rv_center = mean(rv_pert_center), sd_rv_center = sd(rv_pert_center)/sqrt(309) ) %>%
ungroup() %>%
mutate(date = as.Date(obs_date)) %>%
ggplot() +
geom_point(mapping = aes(x = date, y = mean_rv_center)) +
geom_errorbar(aes(x = date, ymin = mean_rv_center - 1.96*sd_rv_center, ymax = mean_rv_center + 1.96*sd_rv_center), color = "black")
