# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary %>%
ggplot() +
geom_histogram(mapping = aes(emmean))
emmean.summary
emmean.summary$lower.CL
emmean.summary$lower.CL
emmean.summary$upper.CL
emmean.summary$lower.CL <= 0
emmean.summary$upper.CL >= 0
emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0
emmean.summary[145,]
1.47*1.96
3.34-2.8812
!(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
emmean.summary %>%
ggplot() +
geom_histogram(mapping = aes(emmean))
emmean.summary %>%
ggplot() +
geom_point(aes(x = as.Date(obs_date), y = emmean), color = "black") +
geom_errorbar(aes(x = as.Date(obs_date), ymin = emmean - 1.96*SE, ymax = emmean + 1.96*SE), color = "black") +
geom_hline(yintercept = 0, color = "red")
summary(currentlm)
emmean.summary$SE
mean( emmean.summary$SE )
rm(lm0, coef.df, currentlm, emmean.summary)
# add median snr for every line-order into the scaled dataframe
scaled_model_df = scaled_model_df %>%
group_by(lam_order) %>%
mutate( med_snr = median(snr) ) %>%
ungroup()
lm0 = lm(centered_rv ~ lam_order + obs_date , scaled_model_df)
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary %>%
ggplot() +
geom_histogram(mapping = aes(emmean))
emmean.summary %>%
ggplot() +
geom_point(aes(x = as.Date(obs_date), y = emmean), color = "black") +
geom_errorbar(aes(x = as.Date(obs_date), ymin = emmean - 1.96*SE, ymax = emmean + 1.96*SE), color = "black") +
geom_hline(yintercept = 0, color = "red")
plot(currentlm,which=1)
plot(currentlm,which=1)
plot(currentlm,which=2)
# R2 of model
summary(currentlm)$adj.r.squared
# rse of model
summary(currentlm)$sigma
# se on date emmean
mean( emmean.summary$SE )
# how many dates are statistically different than 0 (95% confidence)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
rm(lm0, coef.df, currentlm, emmean.summary)
lm0 = lm(centered_rv ~ lam_order + obs_date , scaled_model_df, weights = snr^2)
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary %>%
ggplot() +
geom_histogram(mapping = aes(emmean))
emmean.summary %>%
ggplot() +
geom_point(aes(x = as.Date(obs_date), y = emmean), color = "black") +
geom_errorbar(aes(x = as.Date(obs_date), ymin = emmean - 1.96*SE, ymax = emmean + 1.96*SE), color = "black") +
geom_hline(yintercept = 0, color = "red")
plot(currentlm,which=1)
plot(currentlm,which=2)
# R2 of model
summary(currentlm)$adj.r.squared
# rse of model
summary(currentlm)$sigma
# se on date emmean
mean( emmean.summary$SE )
# how many dates are statistically different than 0 (95% confidence)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
rm(lm0, coef.df, currentlm, emmean.summary)
lm0 = lm(centered_rv ~ lam_order + obs_date , scaled_model_df)
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
# R2 of model
summary(currentlm)$adj.r.squared
# rse of model
summary(currentlm)$sigma
# se on date emmean
mean( emmean.summary$SE )
# how many dates are statistically different than 0 (95% confidence)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
rm(lm0, coef.df, currentlm, emmean.summary)
lm0 = lm(centered_rv ~ lam_order + obs_date , scaled_model_df, weights = med_snr^2)
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary %>%
ggplot() +
geom_histogram(mapping = aes(emmean))
emmean.summary %>%
ggplot() +
geom_point(aes(x = as.Date(obs_date), y = emmean), color = "black") +
geom_errorbar(aes(x = as.Date(obs_date), ymin = emmean - 1.96*SE, ymax = emmean + 1.96*SE), color = "black") +
geom_hline(yintercept = 0, color = "red")
plot(currentlm,which=1)
plot(currentlm,which=2)
# R2 of model
summary(currentlm)$adj.r.squared
# rse of model
summary(currentlm)$sigma
# se on date emmean
mean( emmean.summary$SE )
# how many dates are statistically different than 0 (95% confidence)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
rm(lm0, coef.df, currentlm, emmean.summary)
lm0 = lm(centered_rv ~ lam_order + obs_date + b1 + gh_3 + gh_2 + gh_5 +
gh_7 + depth1 + gh_9 + a1 + gh_11 + gh_4 + width1 +
gh_0 + gh_10, data=scaled_model_df )
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary %>%
ggplot() +
geom_histogram(mapping = aes(emmean))
emmean.summary %>%
ggplot() +
geom_point(aes(x = as.Date(obs_date), y = emmean), color = "black") +
geom_errorbar(aes(x = as.Date(obs_date), ymin = emmean - 1.96*SE, ymax = emmean + 1.96*SE), color = "black") +
geom_hline(yintercept = 0, color = "red")
plot(currentlm,which=1)
plot(currentlm,which=2)
# R2 of model
summary(currentlm)$adj.r.squared
# rse of model
summary(currentlm)$sigma
# se on date emmean
mean( emmean.summary$SE )
# how many dates are statistically different than 0 (95% confidence)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
rm(lm0, coef.df, currentlm, emmean.summary)
lm0 = lm(centered_rv ~ lam_order + obs_date + b1 + gh_3 + gh_2 + gh_5 +
gh_7 + depth1 + gh_9 + a1 + gh_11 + gh_4 + width1 +
gh_0 + gh_10, data=scaled_model_df, weights = med_snr^2 )
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary %>%
ggplot() +
geom_histogram(mapping = aes(emmean))
emmean.summary %>%
ggplot() +
geom_point(aes(x = as.Date(obs_date), y = emmean), color = "black") +
geom_errorbar(aes(x = as.Date(obs_date), ymin = emmean - 1.96*SE, ymax = emmean + 1.96*SE), color = "black") +
geom_hline(yintercept = 0, color = "red")
plot(currentlm,which=1)
plot(currentlm,which=2)
# R2 of model
summary(currentlm)$adj.r.squared
# rse of model
summary(currentlm)$sigma
# se on date emmean
mean( emmean.summary$SE )
# how many dates are statistically different than 0 (95% confidence)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
rm(lm0, coef.df, currentlm, emmean.summary)
lm0 = lm(centered_rv ~ lam_order + obs_date + b1 + gh_3 + gh_2 + gh_5 +
gh_7 + depth1 + gh_9 + a1 + gh_11 + gh_4 + width1 +
gh_0 + gh_10, data=scaled_model_df, weights = snr^2 )
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary %>%
ggplot() +
geom_histogram(mapping = aes(emmean))
emmean.summary %>%
ggplot() +
geom_point(aes(x = as.Date(obs_date), y = emmean), color = "black") +
geom_errorbar(aes(x = as.Date(obs_date), ymin = emmean - 1.96*SE, ymax = emmean + 1.96*SE), color = "black") +
geom_hline(yintercept = 0, color = "red")
plot(currentlm,which=1)
plot(currentlm,which=2)
# R2 of model
summary(currentlm)$adj.r.squared
# rse of model
summary(currentlm)$sigma
# se on date emmean
mean( emmean.summary$SE )
# how many dates are statistically different than 0 (95% confidence)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
?emmeans
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order", weights = snr^2) )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
ggplot() +
geom_histogram(mapping = aes(x = currentlm$residuals))
ggplot() +
geom_density(mapping = aes(x = currentlm$residuals))
ggplot() +
geom_density(mapping = aes(x = currentlm$residuals))
summary(currentlm$residuals)
rm(lm0, coef.df, currentlm, emmean.summary)
scaled_model_df
lm0 = lm(centered_rv ~ lam_order + obs_date + b1 + gh_3 + gh_2 + gh_5 +
gh_7 + depth1 + gh_9 + a1 + gh_11 + gh_4 + width1 +
gh_0 + gh_10, data=scaled_model_df )
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary
emmean.summary
mean(currentlm$residuals^2)
ggplot() +
geom_density(mapping = aes(x = currentlm$residuals))
summary(currentlm$residuals)
# R2 of model
summary(currentlm)$adj.r.squared
# rse of model
summary(currentlm)$sigma
# se on date emmean
mean( emmean.summary$SE )
# how many dates are statistically different than 0 (95% confidence)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
lm0 = lm(centered_rv ~ lam_order + obs_date + b1 + gh_3 + gh_2 + gh_5 +
gh_7 + depth1 + gh_9 + a1 + gh_11 + gh_4 + width1 +
gh_0 + gh_10, data=scaled_model_df, weights = med_snr^2 )
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary %>%
ggplot() +
geom_histogram(mapping = aes(emmean))
emmean.summary %>%
ggplot() +
geom_point(aes(x = as.Date(obs_date), y = emmean), color = "black") +
geom_errorbar(aes(x = as.Date(obs_date), ymin = emmean - 1.96*SE, ymax = emmean + 1.96*SE), color = "black") +
geom_hline(yintercept = 0, color = "red")
ggplot() +
geom_density(mapping = aes(x = currentlm$residuals))
summary(currentlm$residuals)
mean(currentlm$residuals^2)
# R2 of model
summary(currentlm)$adj.r.squared
# rse of model
summary(currentlm)$sigma
# se on date emmean
mean( emmean.summary$SE )
# how many dates are statistically different than 0 (95% confidence)
sum( !(emmean.summary$lower.CL <= 0 & emmean.summary$upper.CL >= 0) )
sum(currentlm$residuals^2)
sum(currentlm$residuals^2)
summary(currentlm)
sum(currentlm$residuals^2)/( nrow(scaled_model_df)  - 45101 )
sqrt( sum(currentlm$residuals^2)/( nrow(scaled_model_df)  - 45101 ) )
summary(currentlm)
emmean.summary
sd(emmean.summary$emmean)
emmean.summary
emmean.summary
# amplitude
amp = 2
# frequency
freq = 1/30
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
pert.df = scaled_model_df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert = rv + pert_val,
centered_rv_pert = centered_rv + pert_val)
pert.df
# graph of perturbation
pert.df %>%
dplyr::select(date_num, pert_val) %>%
unique() %>%
ggplot() +
geom_function(fun = function(x) amp*sin(freq*x), color = "red" ) +
geom_point(mapping = aes(x = date_num, y = pert_val))
lm.pert = lm(centered_rv_pert ~ lam_order + obs_date + b1, pert.df)
# dataframe of coefficients
coef.df = tibble( coef = rownames(summary(lm.pert)$coefficients),
estimate = summary(lm.pert)$coefficients[,1],
se = summary(lm.pert)$coefficients[,2],
pval = summary(lm.pert)$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(lm.pert, "obs_date", nuisance = "lam_order") )
date.emmeans = emmean.summary$emmean
date.se = emmean.summary$SE
# get perturbed values by date
date.perts = pert.df$pert_val %>% unique()
# join the perturbed dataframe with the coefficients to compare our perturbed obsdate with
date.pert.table = full_join(
pert.df %>%
dplyr::select(obs_date, pert_val) %>%
unique() %>%
mutate(obs_date = as.Date(obs_date)),
coef.df %>%
filter( startsWith( coef, "obs_date") ) %>%
mutate(obs_date = as.Date(str_sub(coef, 9))),
by = "obs_date"
)
date.pert.table$emmean = date.emmeans
date.pert.table$emmeanSE = date.se
date.pert.table %>%
ggplot() +
geom_point(aes(x = obs_date, y = emmean), color = "black") +
geom_errorbar(aes(x = obs_date, ymin = emmean - 1.96*emmeanSE, ymax = emmean + 1.96*emmeanSE), color = "black") +
geom_point(aes(x = obs_date, y = pert_val), color = "red") +
geom_function(fun = function(x) amp*sin(freq*as.numeric(x)), color = "red" ) +
xlab("obs date")
date.pert.table %>%
mutate(diff = pert_val - emmean) %>%
ggplot() +
geom_point(aes(x = obs_date, y = diff), color = "black") +
xlab("obs date") +
ylab("difference between perturbed value and obs date estimate")
date.pert.table %>%
mutate(diff = pert_val - emmean) %>%
summarize(mean_diff = mean(diff),
sd_dff = sd(diff),
median_diff = median(diff))
lm.pert = lm(centered_rv_pert ~ lam_order + obs_date + b1 + gh_3 + gh_2 + gh_5 +
gh_7 + depth1 + gh_9 + a1 + gh_11 + gh_4 + width1 +
gh_0 + gh_10, pert.df)
# dataframe of coefficients
coef.df = tibble( coef = rownames(summary(lm.pert)$coefficients),
estimate = summary(lm.pert)$coefficients[,1],
se = summary(lm.pert)$coefficients[,2],
pval = summary(lm.pert)$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(lm.pert, "obs_date", nuisance = "lam_order") )
date.emmeans = emmean.summary$emmean
date.se = emmean.summary$SE
# get perturbed values by date
date.perts = pert.df$pert_val %>% unique()
# join the perturbed dataframe with the coefficients to compare our perturbed obsdate with
date.pert.table = full_join(
pert.df %>%
dplyr::select(obs_date, pert_val) %>%
unique() %>%
mutate(obs_date = as.Date(obs_date)),
coef.df %>%
filter( startsWith( coef, "obs_date") ) %>%
mutate(obs_date = as.Date(str_sub(coef, 9))),
by = "obs_date"
)
date.pert.table$emmean = date.emmeans
date.pert.table$emmeanSE = date.se
date.pert.table %>%
ggplot() +
geom_point(aes(x = obs_date, y = emmean), color = "black") +
geom_errorbar(aes(x = obs_date, ymin = emmean - 1.96*emmeanSE, ymax = emmean + 1.96*emmeanSE), color = "black") +
geom_point(aes(x = obs_date, y = pert_val), color = "red") +
geom_function(fun = function(x) amp*sin(freq*as.numeric(x)), color = "red" ) +
xlab("obs date")
date.pert.table %>%
mutate(diff = pert_val - emmean) %>%
ggplot() +
geom_point(aes(x = obs_date, y = diff), color = "black") +
xlab("obs date") +
ylab("difference between perturbed value and obs date estimate")
date.pert.table %>%
mutate(diff = pert_val - emmean) %>%
summarize(mean_diff = mean(diff),
sd_dff = sd(diff),
median_diff = median(diff))
emmean.summary
# the current linear model to be worked on
currentlm = lm0
# dataframe of coefficients of currentlm
coef.df = tibble( coef = rownames(summary(currentlm )$coefficients),
estimate = summary(currentlm )$coefficients[,1],
se = summary(currentlm )$coefficients[,2],
pval = summary(currentlm )$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(currentlm, "obs_date", nuisance = "lam_order") )
emmean.summary
sd(emmean.summary$emmean)
rm(lm0, coef.df, currentlm, emmean.summary)
# amplitude
amp = 2
# frequency
freq = 1/30
# create perturbed df where each day is perturbed by a sinusodial wave
# date_num is the obsdate converted to a numerical and divided to decrease freq of perturbation
# sin_date is 1 times the sin of date_num
pert.df = scaled_model_df %>%
group_by(obs_date) %>%
mutate(date_num = as.numeric(as.Date(obs_date)),
pert_val = amp*sin(freq*date_num)) %>%
ungroup() %>%
mutate(rv_pert = rv + pert_val,
centered_rv_pert = centered_rv + pert_val)
pert.df
# graph of perturbation
pert.df %>%
dplyr::select(date_num, pert_val) %>%
unique() %>%
ggplot() +
geom_function(fun = function(x) amp*sin(freq*x), color = "red" ) +
geom_point(mapping = aes(x = date_num, y = pert_val))
lm.pert = lm(centered_rv_pert ~ lam_order + obs_date, pert.df)
# dataframe of coefficients
coef.df = tibble( coef = rownames(summary(lm.pert)$coefficients),
estimate = summary(lm.pert)$coefficients[,1],
se = summary(lm.pert)$coefficients[,2],
pval = summary(lm.pert)$coefficients[,4] )
# get emmeans
emmean.summary = summary( emmeans(lm.pert, "obs_date", nuisance = "lam_order") )
date.emmeans = emmean.summary$emmean
date.se = emmean.summary$SE
# get perturbed values by date
date.perts = pert.df$pert_val %>% unique()
# join the perturbed dataframe with the coefficients to compare our perturbed obsdate with
date.pert.table = full_join(
pert.df %>%
dplyr::select(obs_date, pert_val) %>%
unique() %>%
mutate(obs_date = as.Date(obs_date)),
coef.df %>%
filter( startsWith( coef, "obs_date") ) %>%
mutate(obs_date = as.Date(str_sub(coef, 9))),
by = "obs_date"
)
date.pert.table$emmean = date.emmeans
date.pert.table$emmeanSE = date.se
date.pert.table %>%
ggplot() +
geom_point(aes(x = obs_date, y = emmean), color = "black") +
geom_errorbar(aes(x = obs_date, ymin = emmean - 1.96*emmeanSE, ymax = emmean + 1.96*emmeanSE), color = "black") +
geom_point(aes(x = obs_date, y = pert_val), color = "red") +
geom_function(fun = function(x) amp*sin(freq*as.numeric(x)), color = "red" ) +
xlab("obs date")
date.pert.table %>%
mutate(diff = pert_val - emmean) %>%
ggplot() +
geom_point(aes(x = obs_date, y = diff), color = "black") +
xlab("obs date") +
ylab("difference between perturbed value and obs date estimate")
date.pert.table %>%
mutate(diff = pert_val - emmean) %>%
summarize(mean_diff = mean(diff),
sd_dff = sd(diff),
median_diff = median(diff))
