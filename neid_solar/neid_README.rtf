{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 HelveticaNeue-Bold;
\f3\fnil\fcharset0 HelveticaNeue;\f4\fswiss\fcharset0 Arial-ItalicMT;\f5\fnil\fcharset0 HelveticaNeue-Italic;
\f6\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red27\green27\blue27;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c14118\c14118\c14118;
}
\margl1440\margr1440\vieww30800\viewh18180\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 Notes from Eric:\
\
The most relevant one for now is neid_linefinder_line_fits.csv\
\
The columns are\
fit_a, fit_\uc0\u955 c, fit_depth, fit_\u963 \'b2, fit_b:  Best fit values of model\
fit_covar:  Covariance matrix for fit parameters (spaces separate columns, ;'s separate rows)\
\uc0\u967 \'b2_per_dof: goodness-of-fit statistics (I'd have to check to be sure if it's actually the \u967 \'b2 per dof or just something close)\
fit_converged: true if the non-linear fitting algorithm says it converged.  Otherwise, false\
ops_idx:  Integer specifying which observation time measurement is for (I'd have to ask Alex how this maps to date)\
chunk_id:  Integer specifying which order of the spectrum the line was measured in (I think chunk_id=1=>order index 16 in spectrum data file=>physical order 158 and chunk_id=99=>order index 115 in spectrum  data file=>physical order  59, but this could change in future runs)\
pixels:  Range of integers specifying what columns in the original spectrum file were fit\
line_id:  Index specifying which line was measured (if one line appears in two orders, then would get two different line_id's)\
 \
The model is\
flux(\uc0\u955 ) = fit_a * (1 + fit_b * (\u955  - \u955 c) ) * (1 - depth * exp(-0.5*(\u955 -\u955 c)^2/\u963 \'b2) )\
\
Another file that might be of interest is \
linelist_20210527_rll_overlap=1_slope=10000_quant=90_norm=cont&mask=3.csv\
It's a list of lines that we expect to be "clean" as in not contaminated by blending with other stellar lines or telluric absorption lines.\
There are lots of columns, but you can probably ignore all but:\
lambda: wavelength of the line  (or maybe lambda_lo and lambda_hi so you get a range that should bracket the measured wavelengths, after removing the Doppler shift due to Earth's motion)\
depth: depth to check that you're finding the right line\
order:  the order index in the spectrum file\
\
The potential benefit is that you could restrict your analysis to only clean lines from that file and avoid getting distracted by apparent shape changes that are really due to blend or telluric features.  (Of course, there are parameters about how picky to be.)  \
\
\
Notes from Alex Wise:\
\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
The file\'a0
\f2\b\fs30 \cf4 neid_linefinder_good_lines.csv
\f3\b0 \'a0file just contains 5841 line candidate fits, but many of these may be blends or telluric lines. The word "good" in the filename just means they are not contaminated by nans or negative data values. These candidates were found using an automated search on a template spectrum which is the average spectrum of the 100 "best" daily averages from 2021. Of the 5841 candidates, only 1505 of those pass our filters to be considered "clean" lines.
\f1\fs32 \cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 The file named\'a0
\f2\b\fs30 \cf4 linelist_20210527_rll_overlap=1_slope=10000_quant=90_norm=cont&mask=3.csv
\f3\b0 \'a0is our "mask" file containing 1505 clean, unblended lines we used for recent NEID solar RV measurements.
\f1\fs32 \cf2 \
\pard\pardeftab720\partightenfactor0

\f3\fs30 \cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 To get the line wavelengths for the mask, we fit our model to daily average spectra for the 100 "best" days of 2021 NEID solar data, so there are 100 x 5841 = 584100 rows in the\'a0
\f2\b neid_linefinder_line_fits.csv\'a0
\f3\b0 file.\'a0To match this file with the mask,
\f1\fs32 \cf2 \'a0the 
\f4\i line_id
\f1\i0  columns can be matched up.\'a0
\f3\fs30 \cf4 E.g. the first line in the mask has 
\f5\i line_id
\f3\i0 \'a0= 5, and its 100 model fits are in the\'a0
\f2\b neid_linefinder_line_fits.csv
\f3\b0 \'a0file rows 401-500, since those rows all have 
\f5\i line_id
\f3\i0  = 5.
\f1\fs32 \cf2 \
\
\pard\pardeftab720\partightenfactor0

\f6\fs24 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \
I have attached a file with the julian dates for these 100 days in case that helps (JDs_100_neid_best_days)\
\
\
Spectra 50 and 51:\
I have attached spectra number 50 and 51 out of 100. The files are size 9216 x 122, i.e. pixel x order, but we only used 99 orders, numbers 17-115 (including both end points of the range, and these are julia indices so python indices would be 16-114 including the end points). We only used 6501 pixels in the center of each order, i.e. index numbers 1500-8000.\
\
\
\
\
\
\
\
\
\
\
\
\
\
}